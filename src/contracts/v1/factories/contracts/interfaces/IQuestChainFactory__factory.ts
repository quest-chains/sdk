/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { IQuestChainFactory, IQuestChainFactoryInterface } from '../../../contracts/interfaces/IQuestChainFactory';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'proposedAdmin',
        type: 'address',
      },
    ],
    name: 'AdminReplaceProposed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
    ],
    name: 'AdminReplaced',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'FactorySetup',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'proposedPaymentToken',
        type: 'address',
      },
    ],
    name: 'PaymentTokenReplaceProposed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IERC20Token',
        name: 'paymentToken',
        type: 'address',
      },
    ],
    name: 'PaymentTokenReplaced',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'questChain',
        type: 'address',
      },
    ],
    name: 'QuestChainCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'questChain',
        type: 'address',
      },
    ],
    name: 'QuestChainUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'proposedUpgradeFee',
        type: 'uint256',
      },
    ],
    name: 'UpgradeFeeReplaceProposed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'upgradeFee',
        type: 'uint256',
      },
    ],
    name: 'UpgradeFeeReplaced',
    type: 'event',
  },
  {
    inputs: [],
    name: 'admin',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'owners',
            type: 'address[]',
          },
          {
            internalType: 'address[]',
            name: 'admins',
            type: 'address[]',
          },
          {
            internalType: 'address[]',
            name: 'editors',
            type: 'address[]',
          },
          {
            internalType: 'address[]',
            name: 'reviewers',
            type: 'address[]',
          },
          {
            internalType: 'string[]',
            name: 'quests',
            type: 'string[]',
          },
          {
            internalType: 'bool',
            name: 'paused',
            type: 'bool',
          },
          {
            internalType: 'string',
            name: 'details',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'tokenURI',
            type: 'string',
          },
        ],
        internalType: 'struct QuestChainCommons.QuestChainInfo',
        name: '_info',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: '_salt',
        type: 'bytes32',
      },
    ],
    name: 'create',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'owners',
            type: 'address[]',
          },
          {
            internalType: 'address[]',
            name: 'admins',
            type: 'address[]',
          },
          {
            internalType: 'address[]',
            name: 'editors',
            type: 'address[]',
          },
          {
            internalType: 'address[]',
            name: 'reviewers',
            type: 'address[]',
          },
          {
            internalType: 'string[]',
            name: 'quests',
            type: 'string[]',
          },
          {
            internalType: 'bool',
            name: 'paused',
            type: 'bool',
          },
          {
            internalType: 'string',
            name: 'details',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'tokenURI',
            type: 'string',
          },
        ],
        internalType: 'struct QuestChainCommons.QuestChainInfo',
        name: '_info',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: '_salt',
        type: 'bytes32',
      },
    ],
    name: 'createAndUpgrade',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'owners',
            type: 'address[]',
          },
          {
            internalType: 'address[]',
            name: 'admins',
            type: 'address[]',
          },
          {
            internalType: 'address[]',
            name: 'editors',
            type: 'address[]',
          },
          {
            internalType: 'address[]',
            name: 'reviewers',
            type: 'address[]',
          },
          {
            internalType: 'string[]',
            name: 'quests',
            type: 'string[]',
          },
          {
            internalType: 'bool',
            name: 'paused',
            type: 'bool',
          },
          {
            internalType: 'string',
            name: 'details',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'tokenURI',
            type: 'string',
          },
        ],
        internalType: 'struct QuestChainCommons.QuestChainInfo',
        name: '_info',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: '_salt',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: '_deadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'createAndUpgradeWithPermit',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getQuestChainAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paymentToken',
    outputs: [
      {
        internalType: 'contract IERC20Token',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'questChainCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'questChainTemplate',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'questChainToken',
    outputs: [
      {
        internalType: 'contract IQuestChainToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treasury',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'upgradeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_questChainAddress',
        type: 'address',
      },
    ],
    name: 'upgradeQuestChain',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_questChainAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_deadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'upgradeQuestChainWithPermit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class IQuestChainFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IQuestChainFactoryInterface {
    return new utils.Interface(_abi) as IQuestChainFactoryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IQuestChainFactory {
    return new Contract(address, _abi, signerOrProvider) as IQuestChainFactory;
  }
}
